#!/usr/bin/env bash
set -e

# Snippets to help get started:

# Determine if an executable is in the PATH
# if ! type -p ruby >/dev/null; then
#   echo "Ruby not found on the system" >&2
#   exit 1
# fi

# Pass arguments through to another command
# gh issue list "$@" -R cli/cli

# Using the gh api command to retrieve and format information
# QUERY='
#   query($endCursor: String) {
#     viewer {
#       repositories(first: 100, after: $endCursor) {
#         nodes {
#           nameWithOwner
#           stargazerCount
#         }
#       }
#     }
#   }
# '
# TEMPLATE='
#   {{- range $repo := .data.viewer.repositories.nodes -}}
#     {{- printf "name: %s - stargazers: %v\n" $repo.nameWithOwner $repo.stargazerCount -}}
#   {{- end -}}
# '
# exec gh api graphql -f query="${QUERY}" --paginate --template="${TEMPLATE}"
#
if [ -z "$1" ]; then
  echo "Error: Specify workflow name." >&2
  echo ""
  echo "Usage: gh workflow-log-cleaner [<workflow-id> | <workflow-name> | <filename>]"
  echo ""
  echo "Available workflows:"
  gh workflow list --json name --jq '.[].name | "- \(.)"' | cat -
  exit 1
fi

for id in $(gh run list --workflow "$1" --json databaseId --jq '.[].databaseId' --limit 10000); do
  echo "Deleting run $id"
  gh run delete $id
done
